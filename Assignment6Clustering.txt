import pandas as pd


data = pd.read_csv("D:/SEM-5/ML/Assignments/My Codes/Mall_Customers.csv")
data.head()

print("Shape of the dataset :",data.shape)

print("Checking if missing values : ")
data.isnull().sum()

data.columns.tolist()

from sklearn.preprocessing import LabelEncoder
from sklearn.preprocessing import StandardScaler

label = LabelEncoder()
data['Genre'] = label.fit_transform(data['Genre'])
data.head()

#some clustering such as k-means needs the scaling data in which the data is in the 
#from of standard normal distribution (mean = 0,varience=1)
scaler = StandardScaler()
data[['Annual Income (k$)', 'Spending Score (1-100)']] = scaler.fit_transform(data[['Annual Income (k$)', 'Spending Score (1-100)']])
data.head()

from sklearn.model_selection import train_test_split

train,test = train_test_split(data,test_size = 0.3,random_state = 42)

from sklearn.cluster import KMeans

kmeans = KMeans(n_clusters=3,random_state = 42)
train['Cluster'] = kmeans.fit_predict(train[['Annual Income (k$)', 'Spending Score (1-100)']])
train.head()

from sklearn.cluster import AgglomerativeClustering

agglo = AgglomerativeClustering(n_clusters = 3)
train['Cluster-Agglo'] = agglo.fit_predict(train[['Annual Income (k$)', 'Spending Score (1-100)']]) 
train.head()

import matplotlib.pyplot as plt

centroids = kmeans.cluster_centers_

plt.figure(figsize = (5,6))
plt.title("K-Clustering")
plt.scatter(train['Annual Income (k$)'],train['Spending Score (1-100)'],c=train['Cluster'])
plt.scatter(centroids[:,0],centroids[:,1],s=100,c='red',label = 'Centroids', marker ='X')
plt.legend()
plt.show()


plt.figure(figsize = (5,6))
plt.scatter(train['Annual Income (k$)'],train['Spending Score (1-100)'],c=train['Cluster-Agglo'])
plt.title("Agglometative Clustering")
plt.xlabel('Annual Income (k$)')
plt.ylabel('Spending Score (1-100)')

plt.show()

